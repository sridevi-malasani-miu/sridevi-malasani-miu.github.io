questionsArray = [
        { question: "Initialize a new repository.", answer: "git init" },
        { question: "Add files to the staging area.", answer: "git add <file-name>" },
        { question: "Commit changes with a message.", answer: "git commit -m 'message'" },
        { question: "Check the current status of the repository.", answer: "git status" },
        { question: "View the commit history.", answer: "git log" },
        { question: "Fetch changes from the remote repository.", answer: "git fetch" },
        { question: "Fetch changes and merge them into the current branch.", answer: "git pull" },
        { question: "Push changes to the remote repository.", answer: "git push <remote-name> <branch-name>" },
        { question: "Create a new branch.", answer: "git branch <branch-name>" },
        { question: "Switch to a different branch.", answer: "git checkout <branch-name>" },
        { question: "Delete a branch locally.", answer: "git branch -d <branch-name>" },
        { question: "Merge a branch into the current branch.", answer: "git merge <branch-name>" },
        { question: "Display changes in the working directory.", answer: "git diff" },
        { question: "Remove files from the staging area.", answer: "git reset <file-name>" },
        { question: "Revert the last commit.", answer: "git revert HEAD" },
        { question: "List all remote repositories.", answer: "git remote -v" },
        { question: "Clone a repository from a remote URL.", answer: "git clone <repository-url>" },
        { question: "Rename a branch.", answer: "git branch -m <new-name>" },
        { question: "View all branches.", answer: "git branch" },
        { question: "Delete a tag.", answer: "git tag -d <tag-name>" },
        { question: "Create a lightweight tag.", answer: "git tag <tag-name>" },
        { question: "Show details of a specific tag.", answer: "git show <tag-name>" },
        { question: "Remove a file from the working directory and staging area.", answer: "git rm <file-name>" },
        { question: "Track all changes in the repository.", answer: "git add ." },
        { question: "Compare the staging area with the latest commit.", answer: "git diff --staged" },
        { question: "Show changes for a specific file.", answer: "git diff <file-name>" },
        { question: "Check the commit history with file changes.", answer: "git log -p" },
        { question: "Undo the last commit but keep the changes.", answer: "git reset --soft HEAD~1" },
        { question: "Remove untracked files from the working directory.", answer: "git clean -f" },
        { question: "Configure a username for commits.", answer: "git config --global user.name 'Your Name'" },
        { question: "Configure an email for commits.", answer: "git config --global user.email 'you@example.com'" },
        { question: "List the files in the staging area.", answer: "git ls-files" },
        
  ];
  
